[
  {
    "id": 1757592588273,
    "question": "Explain the concept of partitioning in distributed computing and its significance",
    "company": "Seed Question",
    "difficulty": "medium",
    "topic": "System Design",
    "solution": "```markdown\nPartitioning means splitting a large dataset into smaller chunks (partitions) distributed across multiple nodes so they can be processed in parallel. It improves scalability, query performance, and fault tolerance, since only the relevant partitions are scanned or recomputed. For example, partitioning a transactions table by date ensures queries only touch the needed time range instead of the whole dataset.\n```",
    "submittedBy": "dorianganessa",
    "submittedAt": "2025-09-11T12:09:48.273Z",
    "issueNumber": 6,
    "reviewedAt": "2025-09-11T12:11:07.097Z",
    "reviewedBy": "dorianganessa"
  },
  {
    "id": 1757592588273,
    "question": "Explain the concept of partitioning in distributed computing and its significance",
    "company": "Seed Question",
    "difficulty": "easy",
    "topic": "System Design",
    "solution": "```markdown\nPartitioning means splitting a large dataset into smaller chunks (partitions) distributed across multiple nodes so they can be processed in parallel. It improves scalability, query performance, and fault tolerance, since only the relevant partitions are scanned or recomputed. For example, partitioning a transactions table by date ensures queries only touch the needed time range instead of the whole dataset.\n```",
    "submittedBy": "dorianganessa",
    "submittedAt": "2025-09-11T12:09:48.273Z",
    "issueNumber": 6,
    "reviewedAt": "2025-09-11T12:36:36.721Z",
    "reviewedBy": "dorianganessa"
  },
  {
    "id": 1757592588273,
    "question": "Explain the concept of partitioning in distributed computing and its significance",
    "company": "Seed Question",
    "difficulty": "easy",
    "topic": "System Design",
    "solution": "```markdown\nPartitioning means splitting a large dataset into smaller chunks (partitions) distributed across multiple nodes so they can be processed in parallel. It improves scalability, query performance, and fault tolerance, since only the relevant partitions are scanned or recomputed. For example, partitioning a transactions table by date ensures queries only touch the needed time range instead of the whole dataset.\n```",
    "submittedBy": "dorianganessa",
    "submittedAt": "2025-09-11T12:09:48.273Z",
    "issueNumber": 6,
    "reviewedAt": "2025-09-11T12:47:34.962Z",
    "reviewedBy": "dorianganessa"
  }
]